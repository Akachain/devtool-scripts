#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '3.5'

networks:
  akc-net:
    name: $NETWORK_NAME

services:
  admin:
    image: akachain/devtool-admin:lastest
    ports:
      - "44081:4001"
    volumes:
      - ./artifacts/:/data/app/artifacts
      - ./user/crypto-path/:/shared/crypto-path
      - ./user/crypto-store/:/shared/crypto-store
      - ./chaincodes/:/data/app/artifacts/src/chaincodes
    container_name: admin
    networks:
      - akc-net
  ca.org1:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-${ORGNAMES1}
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORGDOMAINS1}-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${PRIV_ORG1_KEY}
      - FABRIC_CA_SERVER_TLS_ENABLED=${TLS_ENABLED}
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORGDOMAINS1}-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${PRIV_ORG1_KEY}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.${ORGDOMAINS1}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/${PRIV_ORG1_KEY} --tls.clientauth.type noclientcert -b admin:adminpw -d'
    volumes:
      - ./artifacts/crypto-config/peerOrganizations/${ORGNAMES1}/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.${ORGDOMAINS1}
    networks:
      - akc-net

  ca.org2:
    image: hyperledger/fabric-ca:$IMAGE_TAG
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-${ORGNAMES2}
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORGDOMAINS2}-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${PRIV_ORG2_KEY}
      - FABRIC_CA_SERVER_TLS_ENABLED=${TLS_ENABLED}
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.${ORGDOMAINS2}-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/${PRIV_ORG2_KEY}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.${ORGDOMAINS2}-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/${PRIV_ORG2_KEY} --tls.clientauth.type noclientcert -b admin:adminpw -d'
    volumes:
      - ./artifacts/crypto-config/peerOrganizations/${ORGNAMES2}/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.${ORGDOMAINS2}
    networks:
      - akc-net

  orderer0.orderer:
    container_name: orderer0.orderer
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - FABRIC_LOGGING_SPEC=info
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=AKCOrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=${TLS_ENABLED}
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./artifacts/channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ./artifacts/crypto-config/ordererOrganizations/orderer/orderers/orderer0.orderer/:/var/hyperledger/orderer
    networks:
      - akc-net

  peer0.org1:
    container_name: peer0.${ORGNAMES1}
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer0.${ORGDOMAINS1}-db:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_PEER_NETWORKID=peer0.${ORGDOMAINS1}
      - CORE_NEXT=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_ID=peer0.${ORGNAMES1}
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer0.orderer:7050
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${ORGDOMAINS1}:7051
      - CORE_PEER_TLS_ENABLED=${TLS_ENABLED}
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_LOCALMSPID=${ORGNAMES1}MSP
      - CORE_VM_DOCKER_HOSTCONFIG_MEMORY=268435456
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ./artifacts/crypto-config/peerOrganizations/${ORGDOMAINS1}/peers/peer0.${ORGDOMAINS1}/msp:/etc/hyperledger/fabric/msp
        - ./artifacts/crypto-config/peerOrganizations/${ORGDOMAINS1}/peers/peer0.${ORGDOMAINS1}/tls:/etc/hyperledger/fabric/tls
    depends_on:
      - orderer0.orderer
      - peer0.org1-db
    networks:
      - akc-net

  peer0.org1-db:
    container_name: peer0.${ORGNAMES1}-db
    image: hyperledger/fabric-couchdb:${DB_IMAGE_TAG}
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    ports:
      - 5984:5984
    networks:
      - akc-net
  
  peer1.org1:
    container_name: peer1.${ORGNAMES1}
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer1.${ORGDOMAINS1}-db:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_PEER_NETWORKID=peer1.${ORGDOMAINS1}
      - CORE_NEXT=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_ID=peer1.${ORGNAMES1}
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer0.orderer:7050
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.${ORGDOMAINS1}:7051
      - CORE_PEER_TLS_ENABLED=${TLS_ENABLED}
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_LOCALMSPID=${ORGNAMES1}MSP
      - CORE_VM_DOCKER_HOSTCONFIG_MEMORY=268435456
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7056:7051
      - 7058:7053
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ./artifacts/crypto-config/peerOrganizations/${ORGDOMAINS1}/peers/peer1.${ORGDOMAINS1}/msp:/etc/hyperledger/fabric/msp
        - ./artifacts/crypto-config/peerOrganizations/${ORGDOMAINS1}/peers/peer1.${ORGDOMAINS1}/tls:/etc/hyperledger/fabric/tls
    depends_on:
      - orderer0.orderer
      - peer1.org1-db
    networks:
      - akc-net

  peer1.org1-db:
    container_name: peer1.${ORGNAMES1}-db
    image: hyperledger/fabric-couchdb:${DB_IMAGE_TAG}
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    ports:
      - 6984:5984
    networks:
      - akc-net

  peer0.org2:
    container_name: peer0.${ORGNAMES2}
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer0.${ORGDOMAINS2}-db:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_PEER_NETWORKID=peer0.${ORGDOMAINS2}
      - CORE_NEXT=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_ID=peer0.${ORGNAMES2}
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer0.orderer:7050
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${ORGDOMAINS2}:7051
      - CORE_PEER_TLS_ENABLED=${TLS_ENABLED}
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_LOCALMSPID=${ORGNAMES2}MSP
      - CORE_VM_DOCKER_HOSTCONFIG_MEMORY=268435456
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ./artifacts/crypto-config/peerOrganizations/${ORGDOMAINS2}/peers/peer0.${ORGDOMAINS2}/msp:/etc/hyperledger/fabric/msp
        - ./artifacts/crypto-config/peerOrganizations/${ORGDOMAINS2}/peers/peer0.${ORGDOMAINS2}/tls:/etc/hyperledger/fabric/tls
    depends_on:
      - orderer0.orderer
      - peer0.org2-db
    networks:
      - akc-net

  peer0.org2-db:
    container_name: peer0.${ORGNAMES2}-db
    image: hyperledger/fabric-couchdb:${DB_IMAGE_TAG}
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    ports:
      - 7984:5984
    networks:
      - akc-net
  
  peer1.org2:
    container_name: peer1.${ORGNAMES2}
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer1.${ORGDOMAINS2}-db:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_PEER_NETWORKID=peer1.${ORGDOMAINS2}
      - CORE_NEXT=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_ID=peer1.${ORGNAMES2}
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer0.orderer:7050
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.${ORGDOMAINS2}:7051
      - CORE_PEER_TLS_ENABLED=${TLS_ENABLED}
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_LOCALMSPID=${ORGNAMES2}MSP
      - CORE_VM_DOCKER_HOSTCONFIG_MEMORY=268435456
      - FABRIC_LOGGING_SPEC=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 8056:7051
      - 8058:7053
    volumes:
        - /var/run/docker.sock:/host/var/run/docker.sock
        - ./artifacts/crypto-config/peerOrganizations/${ORGDOMAINS2}/peers/peer1.${ORGDOMAINS2}/msp:/etc/hyperledger/fabric/msp
        - ./artifacts/crypto-config/peerOrganizations/${ORGDOMAINS2}/peers/peer1.${ORGDOMAINS2}/tls:/etc/hyperledger/fabric/tls
    depends_on:
      - orderer0.orderer
      - peer1.org2-db
    networks:
      - akc-net

  peer1.org2-db:
    container_name: peer1.${ORGNAMES2}-db
    image: hyperledger/fabric-couchdb:${DB_IMAGE_TAG}
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=$NETWORK_NAME
    ports:
      - 8984:5984
    networks:
      - akc-net
